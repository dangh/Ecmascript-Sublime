[
    // Auto-pair asterisks
    { "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*$0*"}, "context":
        [
            { "key": "setting.auto_match_enabled"},
            { "key": "selector", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "selection_empty", "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\$", "match_all": true },
        ]
    },
    {
        "keys": ["*"],
        "command": "insert_snippet",
        "args": {"contents": "*${0:$SELECTION}*"},
        "context": [
            { "key": "selector", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "setting.auto_match_enabled"},
            { "key": "selection_empty", "operand": false, "match_all": true },
        ]
    },
    // If we have two asterisks with the cursor between them, then a backspace removes both
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled" },
            { "key": "selection_empty", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\*$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true }
        ]
    },

    // Auto-pair underscore
    { "keys": ["_"], "command": "insert_snippet", "args": {"contents": "_$0_"}, "context":
        [
            { "key": "setting.auto_match_enabled"},
            { "key": "selector", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "selection_empty", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\$", "match_all": true },
        ]
    },
    {
        "keys": ["_"],
        "command": "insert_snippet",
        "args": {"contents": "_${0:$SELECTION}_"},
        "context": [
            { "key": "selector", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "setting.auto_match_enabled"},
            { "key": "selection_empty", "operand": false, "match_all": true },
        ]
    },
    // If we have two underscores with the cursor between them, then a backspace removes both
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled" },
            { "key": "selection_empty", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "_$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^_", "match_all": true }
        ]
    },

    // Auto-pair backticks
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
        [
            { "key": "setting.auto_match_enabled"},
            { "key": "selector", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "selection_empty", "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\$", "match_all": true },
        ]
    },
    {
        "keys": ["`"],
        "command": "insert_snippet",
        "args": {"contents": "`${0:$SELECTION}`"},
        "context": [
            { "key": "selector", "operand": "text.html.markdown.nested.es - markup.raw" },
            { "key": "setting.auto_match_enabled"},
            { "key": "selection_empty", "operand": false, "match_all": true },
        ]
    },
    // If we have two backticks with the cursor between them, then a backspace removes both
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled" },
            { "key": "selection_empty", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "punctuation.definition.raw.begin.markdown" },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
        ]
    },
]
